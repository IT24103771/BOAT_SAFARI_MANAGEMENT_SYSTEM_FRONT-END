import React, { useEffect, useState, useRef } from "react";
import axios from "axios";
import "../Styles/Report.css";
import { useReactToPrint } from "react-to-print";
import jsPDF from "jspdf";
import html2canvas from "html2canvas";

const Report = () => {
  const [report, setReport] = useState(null); // summary from backend
  const [bookings, setBookings] = useState([]); // booking details
  const reportRef = useRef();

  // Fetch latest bookings for details table
  useEffect(() => {
    axios
      .get("http://localhost:8080/api/bookings")
      .then((res) => {
        setBookings(res.data || []);
      })
      .catch((err) => console.error("Error fetching bookings:", err));
  }, []);

  // Generate and Save Report in DB
  const generateReport = () => {
    axios
      .post("http://localhost:8080/api/reports/generate")
      .then((res) => {
        setReport(res.data);
        alert("Report generated & saved to DB âœ…");
      })
      .catch((err) => console.error("Error generating report:", err));
  };

  // Print / Export PDF (via browser print dialog)
  const handlePrint = useReactToPrint({
    content: () => reportRef.current,
    documentTitle: "Boat_Safari_Booking_Report",
    onAfterPrint: () => alert("Report successfully exported!"),
  });

  // Download PDF directly using jsPDF + html2canvas
  const handleDownload = async () => {
    if (!reportRef.current) return;

    const input = reportRef.current;
    const canvas = await html2canvas(input, { scale: 2 });
    const imgData = canvas.toDataURL("image/png");

    const pdf = new jsPDF("p", "mm", "a4");
    const pdfWidth = pdf.internal.pageSize.getWidth();
    const pdfHeight = (canvas.height * pdfWidth) / canvas.width;

    pdf.addImage(imgData, "PNG", 0, 0, pdfWidth, pdfHeight);
    pdf.save("Boat_Safari_Booking_Report.pdf");
  };

  return (
    <div className="report-container">
      <h1>Booking Report</h1>
      <div className="report-actions">
        <button className="generate-btn" onClick={generateReport}>
          Generate & Save Report
        </button>
        {report && (
          <>
            <button className="print-btn" onClick={handlePrint}>
              Print / Export PDF
            </button>
            <button className="download-btn" onClick={handleDownload}>
              Download PDF
            </button>
          </>
        )}
      </div>

      {report ? (
        <div className="report-content" ref={reportRef}>
          {/* Header */}
          <div className="report-header">
            <h2>Boat Safari Booking Report</h2>
            <p>Date: {new Date(report.generatedAt).toLocaleString()}</p>
          </div>

          {/* Summary */}
          <div className="report-summary">
            <h3>Summary</h3>
            <ul>
              <li>Total Bookings: {report.totalBookings}</li>
              <li>Total Adults: {report.totalAdults}</li>
              <li>Total Children: {report.totalChildren}</li>
              <li>Total Revenue: LKR {report.totalRevenue.toFixed(2)}</li>
            </ul>
          </div>

          {/* Detailed Table */}
          <div className="report-table">
            <h3>Detailed Bookings</h3>
            <table>
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Name</th>
                  <th>Email</th>
                  <th>Safari Date</th>
                  <th>Adults</th>
                  <th>Children</th>
                  <th>Total Price</th>
                  <th>Boat</th>
                  <th>Trip</th>
                </tr>
              </thead>
              <tbody>
                {bookings.length === 0 ? (
                  <tr>
                    <td colSpan="9" style={{ textAlign: "center" }}>
                      No bookings available
                    </td>
                  </tr>
                ) : (
                  bookings.map((b) => (
                    <tr key={b.id}>
                      <td>{b.id}</td>
                      <td>{b.name}</td>
                      <td>{b.email}</td>
                      <td>{b.safariDate}</td>
                      <td>{b.adults}</td>
                      <td>{b.children}</td>
                      <td>{b.totalPrice}</td>
                      <td>{b.boat?.name || "N/A"}</td>
                      <td>{b.trip?.name || "N/A"}</td>
                    </tr>
                  ))
                )}
              </tbody>
            </table>
          </div>

          <p className="report-footer">
            Report generated by Boat Safari Admin Panel
          </p>
        </div>
      ) : (
        <p className="no-report">
          Click "Generate & Save Report" to create a new report.
        </p>
      )}
    </div>
  );
};

export default Report;
